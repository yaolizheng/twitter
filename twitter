#!/usr/bin/env python

import argparse
import daemon
import json
import lockfile
import logging
import os
import twitter.main
import sys
from lockfile.pidlockfile import remove_existing_pidfile


CONFIG_FILE = '/etc/config.json'


log = logging.getLogger(__name__)


def get_pidfile(service_name):
    pidfile = lockfile.pidlockfile.PIDLockFile(
        os.path.join(
            "/", "var", "run", service_name + ".pid"), timeout=-1)
    if pidfile.is_locked():
        try:
            os.kill(pidfile.read_pid(), 0)
            print "Process already running!"
            sys.exit(1)
        except OSError:
            remove_existing_pidfile(pidfile.path)
    return pidfile


def main(args):
    with open(args.config) as f:
        server_config = json.load(f)
    if args.foreground:
        twitter.main.run(server_config)
    else:
        pidfile = get_pidfile(server_config["service_name"])
        with daemon.DaemonContext(pidfile=pidfile):
            twitter.main.run(server_config)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--foreground", default=False, action="store_true")
    parser.add_argument("--config", default=CONFIG_FILE)
    args = parser.parse_args()
    stream_handler = logging.StreamHandler()
    stream_handler.setLevel(logging.DEBUG)
    log.addHandler(stream_handler)
    main(args)
